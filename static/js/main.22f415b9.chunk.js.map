{"version":3,"sources":["components/Navbar/Navbar.js","components/Navbar/index.js","helpers/typeColors.js","components/Card/Card.js","components/Card/index.js","services/pokemon.js","App.js","index.js"],"names":["Navbar","className","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","Card","pokemon","src","sprites","front_default","alt","name","types","map","type","style","backgroundColor","weight","height","abilities","ability","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getAllPokemon","a","App","useState","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","initialURL","useEffect","response","next","previous","loadPokemon","results","fetchData","prev","all","pokemonRecord","_pokemonData","textAlign","onClick","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22f415b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"Navbar\">\r\n            Pokemon API\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import Navbar from './Navbar';\r\n\r\nexport default Navbar;","const typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\n\r\nexport default typeColors;","import React from 'react';\r\nimport typeColors from '../../helpers/typeColors';\r\nimport './style.css';\r\n\r\nfunction Card({ pokemon }) {\r\n    return (\r\n        <div className=\"Card\">\r\n            <div className=\"Card__img\">\r\n                <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n            </div>\r\n            <div className=\"Card__name\">\r\n                {pokemon.name}\r\n            </div>\r\n            <div className=\"Card__types\">\r\n                {\r\n                    pokemon.types.map(type => {\r\n                        return (\r\n                            <div className=\"Card__type\" style={{ backgroundColor: typeColors[type.type.name] }}>\r\n                                {type.type.name}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"Card__info\">\r\n                <div className=\"Card__data Card__data--weight\">\r\n                    <p className=\"title\">Weight</p>\r\n                    <p>{pokemon.weight}</p>\r\n                </div>\r\n                <div className=\"Card__data Card__data--weight\">\r\n                    <p className=\"title\">Height</p>\r\n                    <p>{pokemon.height}</p>\r\n                </div>\r\n                <div className=\"Card__data Card__data--ability\">\r\n                    <p className=\"title\">Ability</p>\r\n                    <p>{pokemon.abilities[0].ability.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import Card from './Card';\r\n\r\nexport default Card;","export function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\nexport async function getAllPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Card from './components/Card';\r\nimport { getPokemon, getAllPokemon } from './services/pokemon';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [pokemonData, setPokemonData] = useState([])\r\n  const [nextUrl, setNextUrl] = useState('');\r\n  const [prevUrl, setPrevUrl] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon'\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let response = await getAllPokemon(initialURL)\r\n      setNextUrl(response.next);\r\n      setPrevUrl(response.previous);\r\n      await loadPokemon(response.results);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const next = async () => {\r\n    setLoading(true);\r\n    let data = await getAllPokemon(nextUrl);\r\n    await loadPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  }\r\n\r\n  const prev = async () => {\r\n    if (!prevUrl) return;\r\n    setLoading(true);\r\n    let data = await getAllPokemon(prevUrl);\r\n    await loadPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  }\r\n\r\n  const loadPokemon = async (data) => {\r\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\r\n      let pokemonRecord = await getPokemon(pokemon)\r\n      return pokemonRecord\r\n    }))\r\n    setPokemonData(_pokemonData);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>\r\n        {loading ? <h1 style={{ textAlign: 'center' }}>Loading...</h1> : (\r\n          <>\r\n            <div className=\"btn\">\r\n              <button onClick={prev}>Prev</button>\r\n              <button onClick={next}>Next</button>\r\n            </div>\r\n            <div className=\"grid-container\">\r\n              {pokemonData.map((pokemon, i) => {\r\n                return <Card key={i} pokemon={pokemon} />\r\n              })}\r\n            </div>\r\n            <div className=\"btn\">\r\n              <button onClick={prev}>Prev</button>\r\n              <button onClick={next}>Next</button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}